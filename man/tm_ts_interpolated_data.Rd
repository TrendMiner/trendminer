% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpolated_data.R
\name{tm_ts_interpolated_data}
\alias{tm_ts_interpolated_data}
\title{Get interpolated time series data by tag name}
\usage{
tm_ts_interpolated_data(
  token,
  tag_name,
  start_date,
  end_date,
  step = 1,
  type = "linear",
  shift = 0,
  ...
)
}
\arguments{
\item{token}{A valid access token}

\item{tag_name}{Tag name}

\item{start_date}{POSIXct object with timezone set to "UTC". Start date of the time series}

\item{end_date}{POSIXct object with timezone set to "UTC". End date of the time series}

\item{step}{Time increment between returned observations expressed in seconds}

\item{type}{Interpolation type which is either "linear" or "stepped"}

\item{shift}{Time series shift (offset) expressed in seconds}

\item{...}{Additional arguments passed on to the underlying HTTP method.
This might be necessary if you need to set some curl options explicitly
via \code{\link[httr]{config}}.}
}
\value{
A list with two elements:
\itemize{
\item \code{tag}: A list with tag information and three elements:
\itemize{
\item \code{tagName}: Length one character vector.  \code{tag_name} of the original request
\item \code{shift}: Length one integer vector. \code{shift} of the original request
\item \code{interpolationType}: Length one character vector. \code{interpolation_type} of the original request
}
\item \code{timeSeries}: A data frame with time series data:
\itemize{
\item \code{index}:  POSIXct vector. Time index of each observation
\item \code{value}: Double vector. Value of each observation
}
}
}
\description{
Get interpolated time series data by tag name
}
\details{
The maximum number of points \code{tm_ts_interpolated_data()} can return is 10.000.
The \code{step} argument defines the time increment between returned observations.
If you define \code{step} to be one second which is the default setting, the time interval
you can select using the \code{start} and \code{end} arguments can span 2 hours, 46 minutes
and 40 seconds (2 x 60 x 60 + 46 x 60 + 40 = 10.000) at most. Make sure to decrease the
resolution by increasing the \code{step} argument if you like to fetch cohesive time series
data of a tag which spans more than 10.000 seconds.

The \code{shift} argument lets you control if \code{tm_ts_interpolated_data} returns values
which are either forward or backward shifted in time before they are aligned
with the actual time in the response. \code{shift} is expressed in seconds.
The example in the following table shows the returned time series values based
on different \code{shift} setings:\tabular{rrrr}{
   Time \tab shift = 0 \tab shift = 1 \tab shift = -1 \cr
   03:02:00 \tab 23 \tab NA \tab 27 \cr
   03:02:01 \tab 27 \tab 23 \tab 25 \cr
   03:02:02 \tab 25 \tab 27 \tab NA \cr
}
}
\examples{
\dontrun{
token <- tm_token()
start <-  ymd_hms("2019-09-15T05:16:00Z")
end <- ymd_hms("2019-09-15T06:16:00Z")

tm_ts_interpolated_data(token, "BA:CONC.1", start, end, 60)
}
}
