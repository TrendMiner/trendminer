% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/browse_structures.R
\name{tm_af_descendant_structures}
\alias{tm_af_descendant_structures}
\title{Get descendant structures by parent structure ID}
\usage{
tm_af_descendant_structures(token, parent_id, ...)
}
\arguments{
\item{token}{A valid access token}

\item{parent_id}{Parent structure ID in UUID format}

\item{...}{Additional arguments passed on to the underlying HTTP method.
This might be necessary if you need to set some curl options explicitly
via \code{\link[httr]{config}}.}
}
\value{
A data frame with all descendant structures of \code{parent_id}.
}
\description{
Retrieves the entire structure subtree underneath \code{parent_id} and returns it
as a data frame.
}
\details{
\code{tm_af_descendant_structures()} leverages \code{tm_af_child_structures()} in recursive
calls to fetch the entire subtree structure underneath \code{parent_id}. Use
\code{tm_af_descendant_structures()} with caution in case you have a broad and deeply
nested asset structure underneath \code{parent_id}.
}
\examples{
\dontrun{
token <- tm_token()
roots <- tm_af_root_structures(token)

# Get descendant subtree structure underneath second root structure
tm_af_descendant_structures(token, roots$structureId[2])

# Get descendant subtree by specific parent structure id
tm_af_descendant_structures(token, "4e58e3ca-e57d-47b5-8619-20d39626116e")
}
}
